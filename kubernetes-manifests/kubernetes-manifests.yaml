---
# Source: crossbuddy/templates/secret.yaml
apiVersion: v1
data:
  DATABASE_PASSWORD: cGFzc3dvcmRfYWRtaW4=
  DATABASE_URL: amRiYzpteXNxbDovL215c3FsLmRlZmF1bHQ6MzMwNi9jcm9zc2ZpdAo=
  DATABASE_USER: Y3Jvc3NmaXRfYWRtaW4=
kind: Secret
metadata:
  name: mysql-info
---
# Source: crossbuddy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: /actuator/prometheus
  name: crossfit-crossbuddy
  labels:
    helm.sh/chart: crossbuddy-0.1.0
    app.kubernetes.io/name: crossbuddy
    app.kubernetes.io/instance: crossfit
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - name: prometheus
      port: 80
      targetPort: prometheus
  selector:
    app.kubernetes.io/name: crossbuddy
    app.kubernetes.io/instance: crossfit
---
# Source: crossbuddy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: /actuator/prometheus
  name: crossfit-crossbuddy
  labels:
    helm.sh/chart: crossbuddy-0.1.0
    app.kubernetes.io/name: crossbuddy
    app.kubernetes.io/instance: crossfit
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  ports:
  - name: prometheus
    containerPort: 80
  selector:
    matchLabels:
      app.kubernetes.io/name: crossbuddy
      app.kubernetes.io/instance: crossfit
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: crossbuddy
        app.kubernetes.io/instance: crossfit
    spec:
      imagePullSecrets:
        - name: docker-registry-key
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: crossbuddy
          securityContext:
            {}
          image: "hongpark/cross-buddy:latest"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: mysql-info
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
---
# Source: crossbuddy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crossfit-crossbuddy
  labels:
    helm.sh/chart: crossbuddy-0.1.0
    app.kubernetes.io/name: crossbuddy
    app.kubernetes.io/instance: crossfit
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: "cross-api.starberry.click"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: crossfit-crossbuddy
                port:
                  number: 80
---
# Source: crossbuddy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "crossfit-crossbuddy-test-connection"
  labels:
    helm.sh/chart: crossbuddy-0.1.0
    app.kubernetes.io/name: crossbuddy
    app.kubernetes.io/instance: crossfit
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['crossfit-crossbuddy:80']
  restartPolicy: Never
